<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.9.7" created="2018-07-23 14:43" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>不写前端的后端</title>
	<link>http://zycat.top</link>
	<description>厨艺修炼中</description>
	<pubDate>Mon, 23 Jul 2018 14:43:34 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://zycat.top</wp:base_site_url>
	<wp:base_blog_url>http://zycat.top</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[limuyan44]]></wp:author_login><wp:author_email><![CDATA[1332729132@qq.com]]></wp:author_email><wp:author_display_name><![CDATA[limuyan44]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category>
		<wp:term_id>4</wp:term_id>
		<wp:category_nicename><![CDATA[gitbase]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[git基础]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[javabase]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[java基础]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>14</wp:term_id>
		<wp:category_nicename><![CDATA[jvm]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[jvm]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>13</wp:term_id>
		<wp:category_nicename><![CDATA[linux]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[linux]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>15</wp:term_id>
		<wp:category_nicename><![CDATA[oracle]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[oracle]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>17</wp:term_id>
		<wp:category_nicename><![CDATA[python]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Python]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>18</wp:term_id>
		<wp:category_nicename><![CDATA[springbooy]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[springboot]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>5</wp:term_id>
		<wp:category_nicename><![CDATA[spring%e5%9f%ba%e7%a1%80]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[spring基础]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>8</wp:term_id>
		<wp:category_nicename><![CDATA[%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[小技巧闲谈]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>19</wp:term_id>
		<wp:category_nicename><![CDATA[%e5%be%85%e7%a0%94%e7%a9%b6%e7%9a%84%e5%86%85%e5%ae%b9]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[待研究的内容]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[技术闲谈]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%91%84%e5%bd%b1%e5%a4%a9%e5%9c%b0]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[摄影天地]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>12</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[数据结构与算法]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[zxy]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[编程语言]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%bd%91%e7%ab%99%e7%9b%b8%e5%85%b3]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[网站相关]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>16</wp:term_id>
		<wp:category_nicename><![CDATA[%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[问题解决方案]]></wp:cat_name>
	</wp:category>
	<wp:term>
		<wp:term_id><![CDATA[4]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[gitbase]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[git基础]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[3]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[javabase]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[java基础]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[14]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[jvm]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[jvm]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[13]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[linux]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[linux]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[15]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[oracle]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[oracle]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[17]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[python]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Python]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[18]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[springbooy]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[springboot]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[5]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[spring%e5%9f%ba%e7%a1%80]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[spring基础]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[11]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%8d%9a%e5%ae%a2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[博客]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[8]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[小技巧闲谈]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[19]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%be%85%e7%a0%94%e7%a9%b6%e7%9a%84%e5%86%85%e5%ae%b9]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[待研究的内容]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[6]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[技术闲谈]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[7]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%91%84%e5%bd%b1%e5%a4%a9%e5%9c%b0]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[摄影天地]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[12]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[数据结构与算法]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[1]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[zxy]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[编程语言]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[9]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bd%91%e7%ab%99%e7%9b%b8%e5%85%b3]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[网站相关]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[16]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[问题解决方案]]></wp:term_name>
	</wp:term>
	<wp:term><wp:term_id>11</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[%e5%8d%9a%e5%ae%a2]]></wp:term_slug><wp:term_name><![CDATA[博客]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=4.9.7</generator>

<image>
	<url>http://zycat.top/wp-content/uploads/2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64-1-32x32.jpg</url>
	<title>不写前端的后端</title>
	<link>http://zycat.top</link>
	<width>32</width>
	<height>32</height>
</image> 

	<item>
		<title>技术闲谈</title>
		<link>http://zycat.top/?page_id=14</link>
		<pubDate>Tue, 30 Jan 2018 04:54:42 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?page_id=14</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2018-01-30 12:54:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-30 04:54:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
			<wp:meta_value><![CDATA[3807d2c1-0218-44ea-9263-bd93af11553f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>猫咪乐园</title>
		<link>http://zycat.top/?page_id=15</link>
		<pubDate>Tue, 30 Jan 2018 04:54:42 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?page_id=15</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2018-01-30 12:54:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-30 04:54:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%8c%ab%e5%92%aa%e4%b9%90%e5%9b%ad]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
			<wp:meta_value><![CDATA[3807d2c1-0218-44ea-9263-bd93af11553f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>摄影空间</title>
		<link>http://zycat.top/?page_id=16</link>
		<pubDate>Tue, 30 Jan 2018 04:54:42 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?page_id=16</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2018-01-30 12:54:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-30 04:54:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%91%84%e5%bd%b1%e7%a9%ba%e9%97%b4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
			<wp:meta_value><![CDATA[3807d2c1-0218-44ea-9263-bd93af11553f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于</title>
		<link>http://zycat.top/?page_id=17</link>
		<pubDate>Tue, 30 Jan 2018 04:54:42 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?page_id=17</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>关于本站</h2>

<blockquote>
  powered by wordpress &amp;&amp; markdown
</blockquote>

<h2>关于本人</h2>

<blockquote>
  dmlx，java &amp; python &amp; groovy &amp; shell
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date><![CDATA[2018-01-30 12:54:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-30 04:54:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%b3%e4%ba%8e]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
			<wp:meta_value><![CDATA[3807d2c1-0218-44ea-9263-bd93af11553f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>git版本合并</title>
		<link>http://zycat.top/?p=27</link>
		<pubDate>Tue, 30 Jan 2018 04:56:34 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>常用命令</h2>

<blockquote>
  <ul>
  <li>合并版本（git cherry-pick [-m parent-number] commitId）</li>
  <li>解决继续合并（git cherry-pick --continue）</li>
  <li>停止合并 （git cherry-pick --abort）</li>
  <li>回退版本 （git reset --hard commitId）</li>
  <li>拉取代码 （git pull --rebase）</li>
  <li>切换分支 （git checkout branchId）</li>
  </ul>
</blockquote>

<h2>合并步骤</h2>

<h3>1. 切换分支,拉取代码</h3>

<blockquote>
  <ul>
  <li>git checkout dev </li>
  <li>git reset --hard HEAD</li>
  <li>git pull --rebase</li>
  </ul>
</blockquote>

<h3>2. 切换分支，合并代码</h3>

<blockquote>
  <ul>
  <li>git cherry-pick commitId</li>
  </ul>
</blockquote>

<h3>3. 推送</h3>

<blockquote>
  <ul>
  <li>git push</li>
  </ul>
</blockquote>

<h2>常见问题</h2>

<h3>1. 代码拉取不下来</h3>

<blockquote>
  <ul>
  <li>git reset --hard HEAD</li>
  <li>git clean -df</li>
  <li>git pull --rebase</li>
  </ul>
</blockquote>

<h3>2. 冲突 </br></h3>

此时状态是<em>master|CHERRY-PICKING)</em>，打开ecplise,选择项目，右键-team-Synchronize workspace,选择冲突的文件，右键mergeTool,在解决完冲突之后，右键Mark as Merged.然后执行

<blockquote>
  <ul>
  <li>git cherry-pick --continue</li>
  </ul>
</blockquote>

完成本次版本拉取

<h2>注意点</h2>

如果这个版本是一个<strong>merge</strong>版本或者是<strong>merge</strong>版本的parent时，此时只能合并它的<strong>merge</strong>版本，使用命令：

<blockquote>
  <ul>
  <li>git cherry-pick -m parentNumber </li>
  </ul>
</blockquote>

其中parentNumber为1是代表合并基线版本，为2时代表合并另外一条线
<strong>直接拉取parent版本会出现部分代码无法合并的情况。</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date><![CDATA[2018-01-30 12:56:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-01-30 04:56:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git%e7%89%88%e6%9c%ac%e5%90%88%e5%b9%b6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="gitbase"><![CDATA[git基础]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AOP的简单实现</title>
		<link>http://zycat.top/?p=31</link>
		<pubDate>Sun, 04 Feb 2018 07:49:07 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>实现类</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">package com.csii.ifp.action;

public class HelloWorld {
    public String sayHello(){
        return "Hello World!";
    }
}
</code></pre>

<h2>xml文件配置</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop.xsd"&gt;

    &lt;bean id="testAction" class="com.csii.ifp.action.HelloWorld"&gt;&lt;/bean&gt;
    &lt;bean id="DamselRescuingKnight" class="com.csii.ifp.action.DamselRescuingKnight"&gt;
        &lt;constructor-arg ref="RunQuest" /&gt;
    &lt;/bean&gt;
    &lt;bean id="BraveQuest" class="com.csii.ifp.action.BraveQuest"&gt;&lt;/bean&gt;
    &lt;bean id="RunQuest" class="com.csii.ifp.action.RunQuest"&gt;&lt;/bean&gt;
    &lt;bean id="MyMinstrel" class="com.csii.ifp.action.MyMinstrel"&gt;&lt;/bean&gt;

    &lt;aop:config&gt;
        &lt;aop:aspect id="my-aspect1" ref="MyMinstrel"&gt;
        &lt;!--定义切点--&gt;
            &lt;aop:pointcut id="emark" expression="execution(* *.emarkQuest(..))"&gt;&lt;/aop:pointcut&gt;
        &lt;!--定义在切点出需要执行的方法--&gt;
            &lt;aop:before pointcut-ref="emark" method="singBefore"&gt;&lt;/aop:before&gt;
            &lt;aop:after pointcut-ref="emark" method="singAfter"&gt;&lt;/aop:after&gt;
        &lt;/aop:aspect&gt;
    &lt;/aop:config&gt;
&lt;/beans&gt;
</code></pre>

这里需要的注意的是，在xml是命名空间里面一定要引入aop的xsd文件。

<h2>AOP的原理-动态代理</h2>

spring的aop采用的<em>jdk动态代理</em>，下面是动态代理的简单实现

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">package com.csii.ifp.action;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

public class JdkProxyHandler implements InvocationHandler {
    private Object target;
    public JdkProxyHandler(Object object) {
        super()    public
            ;
        this.target=object;
    }
    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        Object retVal=null;
        if (method.getName().equals("emark")) {
            System.out.println("before invoke handler");
             retVal=method.invoke(target, args);
            System.out.println("after invoke handler");
        }else{
             retVal=method.invoke(target, args);
        }
        return retVal;
    }
    public Object getProxy(){
        return Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(), target.getClass().getInterfaces(),this);
    }
}
</code></pre>

上面实现了一个简单的动态代理处理类，其中的实现的接口InvocationHandler标明的它是一个动态代理。通过

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(), target.getClass().getInterfaces(),this)
</code></pre>

返回一个所代理的类的实例。下面是具体的使用方法：

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">package com.csii.ifp.action;

public class ProxyTest {
    public static void main(String[] args) {
        JdkProxyHandler handler=new JdkProxyHandler(new RunQuest());
        Quest quest=(Quest) handler.getProxy();
        quest.emark();
    }
}
</code></pre>

其中RunQuest是一个具体的实现类，实现了Quest接口。通过把这个类代理给JdkProxyHandler，这样可以使用反射获得一个新的实例，其中所有的方法都会经过代理类的<strong>invoke</strong>方法。可以在调用方法时统一做一下特殊的处理。*其中代理类转型的只能是一个接口，这里的原因在下面<a href="#jdk动态代理的原理"><em>JDK动态代理章节</em></a>会讲到。

<h3>jdk动态代理的原理</h3>

动态代理涉及的底层方法很多，但是主要的逻辑不是很复杂，需要主要的关注的就是那么几个方法。
首先看构造实例的方法

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">    @CallerSensitive
 static Object newProxyInstance(ClassLoader loader,
                                          Class&lt;?&gt;[] interfaces,
                                          InvocationHandler h)
        throws IllegalArgumentException
    {
    //必须传入一个InvocationHandler的接口
        Objects.requireNonNull(h);
//克隆出需要代理的接口，作用未知
        final Class&lt;?&gt;[] intfs = interfaces.clone();
        //调用者对于这些代理类接口的权限。
        final SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            checkProxyAccess(Reflection.getCallerClass(), loader, intfs);
        }

        /*
         * Look up or generate the designated proxy class.
         */
         //查找或者生成代理类的对象
        Class&lt;?&gt; cl = getProxyClass0(loader, intfs);

        /*
         * Invoke its constructor with the designated invocation handler.
         */
        try {
        //检查是否有cl操作的权限
            if (sm != null) {
                checkNewProxyPermission(Reflection.getCallerClass(), cl);
            }
//通过反射使用构造器生成构造器对象。
            final Constructor&lt;?&gt; cons = cl.getConstructor(constructorParams);
            final InvocationHandler ih = h;
        //如果修饰符不是public的，
            if (!Modifier.isPublic(cl.getModifiers())) {
            //访问控制器，可以在run方法中写入需要权限的操作。使得没有权限的操作变成有权限
                AccessController.doPrivileged(new PrivilegedAction&lt;Void&gt;() {
                    public Void run() {
                        cons.setAccessible(true);
                        return null;
                    }
                });
            }
            //生成
            return cons.newInstance(new Object[]{h});
        } catch (IllegalAccessException|InstantiationException e) {
            throw new InternalError(e.toString(), e);
        } catch (InvocationTargetException e) {
            Throwable t = e.getCause();
            if (t instanceof RuntimeException) {
                throw (RuntimeException) t;
            } else {
                throw new InternalError(t.toString(), t);
            }
        } catch (NoSuchMethodException e) {
            throw new InternalError(e.toString(), e);
        }
    }
</code></pre>

其中<em>CallerSensitive</em>的作用在于

<blockquote>
  这个注解是为了堵住漏洞用的。曾经有黑客通过构造双重反射来提升权限，原理是当时反射只检查固定深度的调用者的类，看它有没有特权，例如固定看两层的调用者（getCallerClass(2)）。如果我的类本来没足够权限群访问某些信息，那我就可以通过双重反射去达到目的：反射相关的类是有很高权限的，而在 我->反射1->反射2 这样的调用链上，反射2检查权限时看到的是反射1的类，这就被欺骗了，导致安全漏洞。使用CallerSensitive后，getCallerClass不再用固定深度去寻找actual caller（“我”），而是把所有跟反射相关的接口方法都标注上CallerSensitive，搜索时凡看到该注解都直接跳过，这样就有效解决了前面举例的问题
</blockquote>

参照<a href="http://blog.csdn.net/hel_wor/article/details/50199797">这里</a>,用处不是很大。
这里主要关注  <em>Class<?> cl = getProxyClass0(loader, intfs);*

``` java
 /**
     * Generate a proxy class.  Must call the checkProxyAccess method
     * to perform permission checks before calling this.
     */
    private static Class&lt;?&gt; getProxyClass0(ClassLoader loader,
                                           Class&lt;?&gt;... interfaces) {
        if (interfaces.length &gt; 65535) {
            throw new IllegalArgumentException(&quot;interface limit exceeded&quot;);
        }

        // If the proxy class defined by the given loader implementing
        // the given interfaces exists, this will simply return the cached copy;
        // otherwise, it will create the proxy class via the ProxyClassFactory
        return proxyClassCache.get(loader, interfaces);
    }
```

可以看到这里校验传入的接口数量不能大于65535，然后直接从缓存中获取代理类,以下是缓存类的实现
``` java
    /**
     * a cache of proxy classes
     */
    private static final WeakCache&lt;ClassLoader, Class&lt;?&gt;[], Class&lt;?&gt;&gt;
        proxyClassCache = new WeakCache&lt;&gt;(new KeyFactory(), new ProxyClassFactory());
```
通过static保证在初始化时通过*ProxyClassFactory*构造出一个代理类，这是proxy的静态内部类。
``` java
 /**
     * A factory function that generates, defines and returns the proxy class given
     * the ClassLoader and array of interfaces.
     */
    private static final class ProxyClassFactory
        implements BiFunction&lt;ClassLoader, Class&lt;?&gt;[], Class&lt;?&gt;&gt;
    {
        // prefix for all proxy class names
        //所有代理类的前缀
        private static final String proxyClassNamePrefix = &quot;$Proxy&quot;;

        // next number to use for generation of unique proxy class names
        //线程安全的计数器
        private static final AtomicLong nextUniqueNumber = new AtomicLong();

        @Override
        public Class&lt;?&gt; apply(ClassLoader loader, Class&lt;?&gt;[] interfaces) {
//这是一个能保证完全相等的map实现。deepEqual
            Map&lt;Class&lt;?&gt;, Boolean&gt; interfaceSet = new IdentityHashMap&lt;&gt;(interfaces.length);
            for (Class&lt;?&gt; intf : interfaces) {
                /*
                 * Verify that the class loader resolves the name of this
                 * interface to the same Class object.
                 */
                 //使用的类加载器能否构造出相同的接口类
                Class&lt;?&gt; interfaceClass = null;
                try {
                    interfaceClass = Class.forName(intf.getName(), false, loader);
                } catch (ClassNotFoundException e) {
                }
                if (interfaceClass != intf) {
                    throw new IllegalArgumentException(
                        intf + &quot; is not visible from class loader&quot;);
                }
                /&lt;/em&gt;
                 * Verify that the Class object actually represents an
                 * interface.
                 &lt;em&gt;/
                 //通过名称和传入的类加载器是否是一个接口
                if (!interfaceClass.isInterface()) {
                    throw new IllegalArgumentException(
                        interfaceClass.getName() + &quot; is not an interface&quot;);
                }
                /&lt;/em&gt;
                 * Verify that this interface is not a duplicate.
                 */
                 //是否传入了相同的接口
                if (interfaceSet.put(interfaceClass, Boolean.TRUE) != null) {
                    throw new IllegalArgumentException(
                        &quot;repeated interface: &quot; + interfaceClass.getName());
                }
            }

&lt;pre class=&quot;prism-highlight line-numbers&quot; data-start=&quot;1&quot;&gt;&lt;code class=&quot;language-null&quot;&gt;        String proxyPkg = null;     // package to define proxy class in
        int accessFlags = Modifier.PUBLIC | Modifier.FINAL;

        /*
         * Record the package of a non-public proxy interface so that the
         * proxy class will be defined in the same package.  Verify that
         * all non-public proxy interfaces are in the same package.
         */
         //所有非public的接口必须在同一个包里面
        for (Class&lt;?&gt; intf : interfaces) {
            int flags = intf.getModifiers();
            if (!Modifier.isPublic(flags)) {
                accessFlags = Modifier.FINAL;
                String name = intf.getName();
                int n = name.lastIndexOf(&#039;.&#039;);
                String pkg = ((n == -1) ? &quot;&quot; : name.substring(0, n + 1));
                if (proxyPkg == null) {
                    proxyPkg = pkg;
                } else if (!pkg.equals(proxyPkg)) {
                    throw new IllegalArgumentException(
                        &quot;non-public interfaces from different packages&quot;);
                }
            }
        }
&lt;/code&gt;&lt;/pre&gt;

//否则采用默认的包名
            if (proxyPkg == null) {
                // if no non-public proxy interfaces, use com.sun.proxy package
                proxyPkg = ReflectUtil.PROXY_PACKAGE + &quot;.&quot;;
            }

&lt;pre class=&quot;prism-highlight line-numbers&quot; data-start=&quot;1&quot;&gt;&lt;code class=&quot;language-null&quot;&gt;        /*
         * Choose a name for the proxy class to generate.
         */
         //构造代理类的类名
        long num = nextUniqueNumber.getAndIncrement();
        String proxyName = proxyPkg + proxyClassNamePrefix + num;

        /*
         * Generate the specified proxy class.
         */
         //创建代理类
        byte[] proxyClassFile = ProxyGenerator.generateProxyClass(
            proxyName, interfaces, accessFlags);
        try {
            return defineClass0(loader, proxyName,
                                proxyClassFile, 0, proxyClassFile.length);
        } catch (ClassFormatError e) {
            /*
             * A ClassFormatError here means that (barring bugs in the
             * proxy class generation code) there was some other
             * invalid aspect of the arguments supplied to the proxy
             * class creation (such as virtual machine limitations
             * exceeded).
             */
            throw new IllegalArgumentException(e.toString());
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre class=&quot;line-numbers prism-highlight&quot; data-start=&quot;1&quot;&gt;&lt;code class=&quot;language-null&quot;&gt;&lt;br /&gt;通过*generateProxyClass*建立类的二进制数据，然后调用本地方法生成代理类。
至于invoke是如何被调用的，那是在生成的$procy0.class中对于方法emark(),会首先调用super.invoke()方法，而这个类继承了代理类JdkProxyHandler,实现了Quest接口。
具体参照[jdk动态代理中invoke方法调用。](http://blog.csdn.net/zcc_0015/article/details/22695647)
生成的$proxy0.class类反编译如下

``` java
package com.sun.proxy;

import com.csii.ifp.action.Quest;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.lang.reflect.UndeclaredThrowableException;

public final class Proxy0 extends Proxy
  implements Quest
{
  private static Method m1;
  private static Method m3;
  private static Method m2;
  private static Method m0;

  public Proxy0()
    throws 
  {
    super(paramInvocationHandler);
  }

  public final boolean equals()
  {
    try
    {
      return ((Boolean)this.h.invoke(this, m1, new Object[] { paramObject })).booleanValue();
    }
    catch (RuntimeException localRuntimeException)
    {
      throw localRuntimeException;
    }
    catch (Throwable localThrowable)
    {
      throw new UndeclaredThrowableException(localThrowable);
    }
  }

  public final void emark()
    throws 
  {
    try
    {
      this.h.invoke(this, m3, null);
      return;
    }
    catch (RuntimeException localRuntimeException)
    {
      throw localRuntimeException;
    }
    catch (Throwable localThrowable)
    {
      throw new UndeclaredThrowableException(localThrowable);
    }
  }

  public final String toString()
  {
    try
    {
      return ((String)this.h.invoke(this, m2, null));
    }
    catch (RuntimeException localRuntimeException)
    {
      throw localRuntimeException;
    }
    catch (Throwable localThrowable)
    {
      throw new UndeclaredThrowableException(localThrowable);
    }
  }

  public final int hashCode()
  {
    try
    {
      return ((Integer)this.h.invoke(this, m0, null)).intValue();
    }
    catch (RuntimeException localRuntimeException)
    {
      throw localRuntimeException;
    }
    catch (Throwable localThrowable)
    {
      throw new UndeclaredThrowableException(localThrowable);
    }
  }

  static
  {
    try
    {
      m1 = Class.forName("java.lang.Object").getMethod("equals", new Class[] { Class.forName("java.lang.Object") });
      m3 = Class.forName("com.csii.ifp.action.Quest").getMethod("emark", new Class[0]);
      m2 = Class.forName("java.lang.Object").getMethod("toString", new Class[0]);
      m0 = Class.forName("java.lang.Object").getMethod("hashCode", new Class[0]);
      return;
    }
    catch (NoSuchMethodException localNoSuchMethodException)
    {
      throw new NoSuchMethodError(localNoSuchMethodException.getMessage());
    }
    catch (ClassNotFoundException localClassNotFoundException)
    {
      throw new NoClassDefFoundError(localClassNotFoundException.getMessage());
    }
  }
}

</code></pre>

至此，jdk动态代理就结束了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2018-02-04 15:49:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-02-04 07:49:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aop%e7%9a%84%e7%ae%80%e5%8d%95%e5%ae%9e%e7%8e%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="spring%e5%9f%ba%e7%a1%80"><![CDATA[spring基础]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_b19aa96a1426f51fa9c929bd51502b19]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>spring入门-bean的配置</title>
		<link>http://zycat.top/?p=33</link>
		<pubDate>Sun, 04 Feb 2018 07:49:45 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[
<!DOCTYPE html><html><head><title>spring 使用bean的简单例子</title><meta charset='utf-8'><link href='https://dn-maxiang.qbox.me/res-min/themes/marxico.css' rel='stylesheet'><style>
.note-content  {font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif;}

</style></head><body><div id='preview-contents' class='note-content'>
                        
                    
<div><div class="toc"><div class="toc">
<ul>
<li><a href="#spring-使用bean的简单例子">spring 使用bean的简单例子</a><ul>
<li><a href="#建立简单的实现类">建立简单的实现类</a></li>
<li><a href="#xml文件配置">XML文件配置</a></li>
<li><a href="#测试类">测试类</a></li>
</ul>
</li>
</ul>
</div>
</div>
</div>



<h2 id="建立简单的实现类">建立简单的实现类</h2>



<pre class="prettyprint hljs-dark"><code class="language-java hljs"><div class="hljs-line"><span class="hljs-keyword">package</span> com.csii.ifp.action;
</div><div class="hljs-line">
</div><div class="hljs-line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorld</span> </span>{
</div><div class="hljs-line">    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">sayHello</span><span class="hljs-params">()</span></span>{
</div><div class="hljs-line">        <span class="hljs-keyword">return</span> <span class="hljs-string">"Hello World!"</span>;
</div><div class="hljs-line">    }
</div><div class="hljs-line">}
</div></code></pre>



<h2 id="xml文件配置">XML文件配置</h2>



<pre class="prettyprint hljs-dark"><code class="language-xml hljs"><div class="hljs-line">    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"testAction"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"com.csii.ifp.action.HelloWorld"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span>
</div></code></pre>



<h2 id="测试类">测试类</h2>



<pre class="prettyprint hljs-dark"><code class="language-java hljs"><div class="hljs-line"><span class="hljs-keyword">package</span> com.csii.ifp.action;
</div><div class="hljs-line">
</div><div class="hljs-line"><span class="hljs-keyword">import</span> java.lang.reflect.Modifier;
</div><div class="hljs-line">
</div><div class="hljs-line"><span class="hljs-keyword">import</span> org.springframework.context.ApplicationContext;
</div><div class="hljs-line"><span class="hljs-keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;
</div><div class="hljs-line">
</div><div class="hljs-line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ManTest</span> </span>{
</div><div class="hljs-line"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
</div><div class="hljs-line">    <span class="hljs-meta">@SuppressWarnings</span>(<span class="hljs-string">"resource"</span>)
</div><div class="hljs-line">    ApplicationContext context=<span class="hljs-keyword">new</span> ClassPathXmlApplicationContext(<span class="hljs-string">"config/springBean/actionBeans.xml"</span>);
</div><div class="hljs-line">    HelloWorld helloWorld=(HelloWorld)context.getBean(<span class="hljs-string">"testAction"</span>);
</div><div class="hljs-line">    System.out.println(helloWorld.sayHello());
</div><div class="hljs-line">
</div><div class="hljs-line">}
</div><div class="hljs-line">}
</div></code></pre>

<p>输出 <strong>Hello World!</strong> <br>
这是一个使用spring来进行配置开发的简单例子。spring的优势在于，我们可以将HelloWorld实现某个接口，这样在实现类里面使用接口向上转型，对于不同的实现来说，只需要改变<strong>xml</strong>文件中的bean配置即可，这样实现了代码的接口，也体现的java提倡的<strong>面向接口编程</strong>。</p></div></body></html>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date><![CDATA[2018-02-04 15:49:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-02-04 07:49:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[spring%e5%85%a5%e9%97%a8-bean%e7%9a%84%e9%85%8d%e7%bd%ae]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="spring%e5%9f%ba%e7%a1%80"><![CDATA[spring基础]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RocketMqQ入门</title>
		<link>http://zycat.top/?p=44</link>
		<pubDate>Sun, 11 Mar 2018 03:57:46 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>RocketMQ入门</h1>

@(mq)[消息队列|入门|MarkDown]

<h3>什么是RocketMQ</h3>

RcoketMQ是阿里巴巴开源的分布式消息中间件，现已捐赠给Apache基金会。

<h3>RocketMQ特点</h3>

<ul>
<li>具有高性能、高可靠、高实时、分布式特点。</li>
<li>Producer、Consumer、队列都可以分布式。</li>
<li>Producer向一些队列轮流发送消息，队列集合称为Topic，Consumer如果做广播消费，则一个consumer实例消费这个Topic对- - 应的所有队列，如果做集群消费，则多个Consumer实例平均消费这个topic对应的队列集合。</li>
<li>能够保证严格的消息顺序</li>
<li>提供丰富的消息拉取模式</li>
<li>高效的订阅者水平扩展能力</li>
<li>实时的消息订阅机制</li>
<li>亿级消息堆积能力</li>
<li>较少的依赖</li>
</ul>

<h3>rocketmq的整体架构</h3>

<img src="\rocketmq.png" alt="can not find this img!" />

<h3>RocketMQ组件描述</h3>

<strong>nameserver</strong>

<blockquote>
  提供broker的路由服务，在实例挂掉之后保证集群的可用性。
</blockquote>

<strong>producer</strong>

<blockquote>
  消息的生产者，可以用多个具有相同group的producer组成集群。
</blockquote>

<strong>broker</strong>

<blockquote>
  队列的实际的执行者，分为master和slave，master具有读写权限borkerid=0，slave只有读权限brokerid>0，使用相同的brokername标记同一组broker。
</blockquote>

<strong>consumer</strong>

<blockquote>
  消息的消费者，可以用多个具有相同group的consumer组成集群。
</blockquote>

<h3>RocketMQ部署模式</h3>

<strong>双master模式</strong>

<blockquote>
  多台master组成集群,当其中一台master停止之后此broker信息不可用
</blockquote>

<strong>主从异步模式</strong>

<blockquote>
  master和slave异步同步信息，producer发送信息至master成功后返回成功，当master挂掉之后会丢失部分信息。
</blockquote>

<strong>主从同步模式</strong>

<blockquote>
  slave同步写入master的信息，producer发送消息至master后只有slave也写入成功之后才会返回成功。挂掉一台之后服务无影响。
</blockquote>

<h3>FAQ</h3>

<ul>
<li>rocket支持消息过滤，消息的定时，批量发送消息。</li>
<li>同一个jvm只存在不存在2个相同groupname的producer和consumer</li>
<li>rocketmq的消息只会存在一定时间，然后删除，默认3天。</li>
<li>一个消息被失败消费一定次数之后就不会被抛弃。</li>
<li>rocketmq保证消息至少被消费一次，不保证重复消费。</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date><![CDATA[2018-03-11 11:57:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-11 03:57:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rocketmqq%e5%85%a5%e9%97%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88"><![CDATA[技术闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IDEA永久破解</title>
		<link>http://zycat.top/?p=46</link>
		<pubDate>Sun, 11 Mar 2018 04:00:42 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  注：仅为尝试所用，如需长期使用或有条件，请支持正版。
</blockquote>

<h2>1. 官网下载</h2>

<blockquote>
  https://www.jetbrains.com/idea/download/#section=windows
</blockquote>

<h2>2. 下载破解jar</h2>

http://idea.lanyus.com/

<h2>3. 修改配置文件</h2>

<blockquote>
  在idea的安装目录bin下面有idea.exe.vmoptions、idea64.exe.vmoptions 2个文件，文件内容追加
  -javaagent:D:\IntelliJ IDEA 2017.3.4\bin\JetbrainsCrack-2.7-release-str.jar 此处的jar包地址就是前面下下来的jar包地址
</blockquote>

<h2>4.启动idea</h2>

在输入licence的地方选择输入code,

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">ThisCrackLicenseId-{  
"licenseId":"ThisCrackLicenseId",  
"licenseeName":"idea",  
"assigneeName":"",  
"assigneeEmail":"idea@163.com",  
"licenseRestriction":"For This Crack, Only Test! Please support genuine!!!",  
"checkConcurrentUse":false,  
"products":[  
{"code":"II","paidUpTo":"2099-12-31"},  
{"code":"DM","paidUpTo":"2099-12-31"},  
{"code":"AC","paidUpTo":"2099-12-31"},  
{"code":"RS0","paidUpTo":"2099-12-31"},  
{"code":"WS","paidUpTo":"2099-12-31"},  
{"code":"DPN","paidUpTo":"2099-12-31"},  
{"code":"RC","paidUpTo":"2099-12-31"},  
{"code":"PS","paidUpTo":"2099-12-31"},  
{"code":"DC","paidUpTo":"2099-12-31"},  
{"code":"RM","paidUpTo":"2099-12-31"},  
{"code":"CL","paidUpTo":"2099-12-31"},  
{"code":"PC","paidUpTo":"2099-12-31"}  
],  
"hash":"2911276/0",  
"gracePeriodDays":7,  
"autoProlongated":false}
</code></pre>

<h2>5.破解结束</h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date><![CDATA[2018-03-11 12:00:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-11 04:00:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[idea%e6%b0%b8%e4%b9%85%e7%a0%b4%e8%a7%a3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88"><![CDATA[小技巧闲谈]]></category>
		<category domain="category" nicename="zxy"><![CDATA[编程语言]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_8ff075e041bacbae9330a4d84f232678]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_26fb7194a197ed43bdbfacae7d3d2b1d]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>首页</title>
		<link>http://zycat.top/?p=130</link>
		<pubDate>Thu, 19 Apr 2018 06:07:39 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=130</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date><![CDATA[2018-04-19 14:07:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-19 06:07:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%a6%96%e9%a1%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%8d%9a%e5%ae%a2"><![CDATA[博客]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[130]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://zycat.top/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://zycat.top/?p=131</link>
		<pubDate>Thu, 19 Apr 2018 06:07:39 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date><![CDATA[2018-04-19 14:07:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-19 06:07:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[131]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%8d%9a%e5%ae%a2"><![CDATA[博客]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[17]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://zycat.top/?p=136</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date><![CDATA[2018-04-19 14:13:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_orphaned]]></wp:meta_key>
			<wp:meta_value><![CDATA[1524118409]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://zycat.top/?p=137</link>
		<pubDate>Thu, 19 Apr 2018 06:14:39 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date><![CDATA[2018-04-19 14:14:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-19 06:14:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[137]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%8d%9a%e5%ae%a2"><![CDATA[博客]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>书籍ing</title>
		<link>http://zycat.top/?page_id=141</link>
		<pubDate>Thu, 19 Apr 2018 06:25:07 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?page_id=141</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>展示在读的书籍</h2>

<ul>
<li>深入理解java虚拟机第二版-周志明</li>
<li>java8实战</li>
<li>SPRING技术内幕：深入解析SPRING架构与设计原理</li>
<li>SPRING 实战（第3版）</li>
<li>用户力</li>
<li>观山海</li>
<li>人间失格</li>
<li>局外人</li>
<li>高可用架构（第一卷）</li>
<li>Redis入门指南+第2版</li>
<li>TCP-IP详解卷1：协议</li>
<li>深入理解Java虚拟机_JVM高级特性与最佳实践+第2版</li>
<li>JAVA并发编程实战</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date><![CDATA[2018-04-19 14:25:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-19 06:25:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b9%a6%e7%b1%8ding]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://zycat.top/?p=143</link>
		<pubDate>Thu, 19 Apr 2018 06:25:39 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date><![CDATA[2018-04-19 14:25:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-19 06:25:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[143]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%8d%9a%e5%ae%a2"><![CDATA[博客]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[141]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://zycat.top/?p=144</link>
		<pubDate>Thu, 19 Apr 2018 06:26:22 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date><![CDATA[2018-04-19 14:26:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-19 06:26:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[144]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e5%8d%9a%e5%ae%a2"><![CDATA[博客]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[obfx_menu_icon]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1a3b1390973c11e6912b25d9f65b2d64</title>
		<link>http://zycat.top/?attachment_id=145</link>
		<pubDate>Fri, 20 Apr 2018 16:23:55 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/wp-content/uploads/2018/04/1a3b1390973c11e6912b25d9f65b2d64.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date><![CDATA[2018-04-21 00:23:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-20 16:23:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[1a3b1390973c11e6912b25d9f65b2d64]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://zycat.top/wp-content/uploads/2018/04/1a3b1390973c11e6912b25d9f65b2d64.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018/04/1a3b1390973c11e6912b25d9f65b2d64.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:960;s:6:"height";i:1211;s:4:"file";s:44:"2018/04/1a3b1390973c11e6912b25d9f65b2d64.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-238x300.jpg";s:5:"width";i:238;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-768x969.jpg";s:5:"width";i:768;s:6:"height";i:969;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:45:"1a3b1390973c11e6912b25d9f65b2d64-812x1024.jpg";s:5:"width";i:812;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:26:"zerif-post-thumbnail-large";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-750x500.jpg";s:5:"width";i:750;s:6:"height";i:500;s:9:"mime-type";s:10:"image/jpeg";}s:32:"zerif-post-thumbnail-large-table";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-600x300.jpg";s:5:"width";i:600;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-400x200.jpg";s:5:"width";i:400;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:44:"1a3b1390973c11e6912b25d9f65b2d64-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-1a3b1390973c11e6912b25d9f65b2d64.jpg</title>
		<link>http://zycat.top/?attachment_id=146</link>
		<pubDate>Fri, 20 Apr 2018 16:24:10 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/wp-content/uploads/2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://zycat.top/wp-content/uploads/2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date><![CDATA[2018-04-21 00:24:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-20 16:24:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-1a3b1390973c11e6912b25d9f65b2d64-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://zycat.top/wp-content/uploads/2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-logo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:960;s:6:"height";i:961;s:4:"file";s:52:"2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64.jpg";s:5:"sizes";a:9:{s:9:"thumbnail";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-768x769.jpg";s:5:"width";i:768;s:6:"height";i:769;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:26:"zerif-post-thumbnail-large";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-750x500.jpg";s:5:"width";i:750;s:6:"height";i:500;s:9:"mime-type";s:10:"image/jpeg";}s:32:"zerif-post-thumbnail-large-table";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-600x300.jpg";s:5:"width";i:600;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-400x200.jpg";s:5:"width";i:400;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-1a3b1390973c11e6912b25d9f65b2d64-1.jpg</title>
		<link>http://zycat.top/?attachment_id=148</link>
		<pubDate>Fri, 20 Apr 2018 16:32:46 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/wp-content/uploads/2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://zycat.top/wp-content/uploads/2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64-1.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date><![CDATA[2018-04-21 00:32:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-20 16:32:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-1a3b1390973c11e6912b25d9f65b2d64-1-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://zycat.top/wp-content/uploads/2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64-1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:54:"2018/04/cropped-1a3b1390973c11e6912b25d9f65b2d64-1.jpg";s:5:"sizes";a:12:{s:9:"thumbnail";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif-post-thumbnail";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:26:"zerif-post-thumbnail-large";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-512x500.jpg";s:5:"width";i:512;s:6:"height";i:500;s:9:"mime-type";s:10:"image/jpeg";}s:32:"zerif-post-thumbnail-large-table";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-512x300.jpg";s:5:"width";i:512;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:33:"zerif-post-thumbnail-large-mobile";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-400x200.jpg";s:5:"width";i:400;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:19:"zerif_project_photo";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-285x214.jpg";s:5:"width";i:285;s:6:"height";i:214;s:9:"mime-type";s:10:"image/jpeg";}s:20:"zerif_our_team_photo";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-174x174.jpg";s:5:"width";i:174;s:6:"height";i:174;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-270";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-270x270.jpg";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-192";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-192x192.jpg";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-180";a:4:{s:4:"file";s:54:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-180x180.jpg";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:10:"image/jpeg";}s:12:"site_icon-32";a:4:{s:4:"file";s:52:"cropped-1a3b1390973c11e6912b25d9f65b2d64-1-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jmeter实战</title>
		<link>http://zycat.top/?p=205</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>安装</h1>

话不多说，先上官网 http://jmeter.apache.org/
下载完之后，先切换中文（随意，由于是入门实战所以还是建议切换中文，毕竟只是个工具，熟悉的界面最好）
修改 ** \apache-jmeter-4.0\bin\jmeter.properties**
内的 <em>language=zh_CN</em>即可。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date><![CDATA[2018-07-16 21:17:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="zxy"><![CDATA[编程语言]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>idea入门</title>
		<link>http://zycat.top/?p=73</link>
		<pubDate>Wed, 04 Apr 2018 08:10:02 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>idea入门</h1>

<h2>常用快捷键</h2>

<ul>
<li>展示类中的方法 ： ctrl + f12</li>
<li>查找方法调用： alt  + f7</li>
<li>代码包含例如 try , if : ctrl + alt + t</li>
<li>打开最近文件 ctrl + e</li>
<li>打开最近修改的文件 ctrl + shift + e</li>
<li>自动完成分号 ctrl + shift + enter</li>
<li>查看类的继承关系 ctrl + h 关闭此窗口 shift + esc</li>
<li>格式化代码 ctrl + alt + l</li>
<li>切换大小写 ctrl + shift + u</li>
<li>选择粘贴 ctrl + shift +v</li>
<li>自动提示 ctrl + alt + space</li>
<li>使用的这个方法的地方 ctrl+b</li>
<li>跳转子类实现 ctrl + alt +b</li>
<li>跳转指定行 ctrl + g</li>
<li>跳转与当前光标内容相同的下一位置 ctrl + f3</li>
<li>跳转与当前光标内容相同的上一位置 shift + f3</li>
<li>类图生成 ctrl + alt + shift + u</li>
<li>选中的行合并成一行 ctrl + shift + j</li>
<li>高亮选中代码  ctrl + shift +f3  注：关掉文件就会恢复</li>
<li>查找操作 ctrl + shift +a</li>
<li>打开书签和收藏 alt +2</li>
<li>添加书签 ctrl +f11</li>
<li>打开debug列表选择项目执行  alt + shift + f9</li>
<li>去除不需要引入的包 ctrl + alt +o</li>
</ul>

<h2>格式化</h2>

<ul>
<li>仓库下载formatter的plugin可以导入eclipse的codeTemplate.xml</li>
<li>配置live template实现syso之类的自动提示</li>
</ul>

<h2>导入maven项目</h2>

<ul>
<li>如果导进去的不是maven,可以尝试直接导入pom.xml  </li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date><![CDATA[2018-04-04 16:10:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-04 08:10:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[idea%e5%85%a5%e9%97%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88"><![CDATA[小技巧闲谈]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88"><![CDATA[技术闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>idea入门之重构</title>
		<link>http://zycat.top/?p=80</link>
		<pubDate>Thu, 05 Apr 2018 11:33:55 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[本章是继 <strong><a href="http://zycat.top/?p=73">idea</a></strong> 入门之后的文章，主要介绍了关于代码重构的几个快捷键。不过，大部分的重构都是代码的不规范，最终还是希望能够规范自己的代码而不是依赖于重构。

<ol start="1.">
<li>ctrl + alt +m

<blockquote>
  注： 这个方法应该是用的比较多的，能够将选中的代码块提取为一个方法，在写代码的时候还是挺方便的。另外，将功能细化真的是一个好习惯，一个类应该只为唯一的大功能而存在，对于类中的逻辑应该是由各个方法组成的，主方法执行处理的流程逻辑，而对于每个逻辑都应该由方法来实现，类中的方法应该具有细化的唯一职责。
</blockquote></li>
<li>ctrl + shift +t

<blockquote>
  生成测试用例，程序员的任何代码都是应该经过测的。一个完善的测试体系是一个程序员的基本素养。
</blockquote></li>
<li>ctrl + alt +t

<blockquote>
  这个方法用的时候也比较方便，可以将选中代码包含起来，if/else try/catch 等等
</blockquote></li>
<li>ctrl + alt +v

<blockquote>
  将当前行的代码复制给一个变量，用的不是很多，通常使用<strong>alt + enter</strong>就可以实现了。
</blockquote></li>
<li>ctrl +shift +j

<blockquote>
  将多行合并为一行
</blockquote></li>
<li>ctrl +o

<blockquote>
  重写父类的方法、
</blockquote></li>
<li>alt + f7

<blockquote>
  类中使用选中代码的位置
</blockquote></li>
<li>alt +7

<blockquote>
  查看类的结构，包含本地变量和方法
</blockquote></li>
</ol start="1.">]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date><![CDATA[2018-04-05 19:33:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-05 11:33:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[idea%e5%85%a5%e9%97%a8%e4%b9%8b%e9%87%8d%e6%9e%84]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88"><![CDATA[小技巧闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>idea热部署插件jrebel 6.0版本破解及使用</title>
		<link>http://zycat.top/?p=92</link>
		<pubDate>Mon, 09 Apr 2018 13:28:02 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>破解</h2>

<ol start="1.">
<li>具体破解说明都在链接的<strong>readme</strong>里面</li>
</ol start="1.">

<blockquote>
  （链接）：[https://pan.baidu.com/s/1BFIkfmxG_TgoSW9VWng0RA] 密码：i52b
</blockquote>

<h2>使用</h2>

<ol start="1.">
<li>首先要打开settings里面的build project automatically</li>
<li>使用ctrl + alt +shift +/ 来勾选 compiler.automake.allow.when.app.running.这个时候自动项目的时候会自动刷新修改的内容。不过，一定要使用 ctrl + f9来编译文件使修改生效。</li>
</ol start="1.">]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date><![CDATA[2018-04-09 21:28:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-09 13:28:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[idea%e7%83%ad%e9%83%a8%e7%bd%b2%e6%8f%92%e4%bb%b6jrebel-6-0%e7%89%88%e6%9c%ac%e7%a0%b4%e8%a7%a3%e5%8f%8a%e4%bd%bf%e7%94%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88"><![CDATA[小技巧闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>idea入门之debug</title>
		<link>http://zycat.top/?p=100</link>
		<pubDate>Mon, 09 Apr 2018 14:15:18 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <ol start="1.">
  <li><p>ctrl +shift +f8 如果光标不在断点处的时候打开断点列表，选
  择开启或者关闭断点，如果光标在断点的那一行的话就可以设置进入断点的condition.</p></li>
  <li><p>ctrl+shift +a 查询mute breakpoints可以关闭所有的断点</p></li>
  <li><p>在进行调试的时候，f8代表一行一行往下面走，f7会进入方法，可以使用shift + f8回去， f9就是跳到下一个断点的地方</p></li>
  <li><p>使用alt +f8能够自己求解表达式的值</p></li>
  <li><p>ctrl + f8 设置和取消断点</p></li>
  <li><p>shift + f7 如果当前行有多个方法就可以选择进入哪个方法</p></li>
  <li><p>alt + shift + f7 进入方法内无论该方法内嵌套了多少个其他的方法。</p></li>
  </ol start="1.">
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date><![CDATA[2018-04-09 22:15:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-09 14:15:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[idea%e5%85%a5%e9%97%a8%e4%b9%8bdebug]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88"><![CDATA[小技巧闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>网站使用let’s Encrypt 安装ssl证书</title>
		<link>http://zycat.top/?p=115</link>
		<pubDate>Mon, 09 Apr 2018 17:10:15 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  官网上生成证书的方式有很多种，正好ecs上面有git所以就采用了<strong>certbot</strong>来生成
</blockquote>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">    git clone https://github.com/certbot/certbot
    cd certbot/
    ./certbot-auto certonly --standalone --email duanmu3209211994@163.com -d zycat.top -d www.zycat.top

</code></pre>

执行完上面之后生成的证书在【/etc/letsencrypt/】这里面，如果生成的过程中80端口报错的话是因为nginx占用了。执行【service nginx stop】关掉nginx即可。
我们用到的证书在

<blockquote>
  ssl_certificate /etc/letsencrypt/live/zycat.top/fullchain.pem;
           ssl_certificate_key /etc/letsencrypt/live/zycat.top/privkey.pem;
</blockquote>

解下来配置和nginx.conf即可
为了方便起见将原来http的server改成

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">server{
#ssl start
        listen 443 ssl;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/zycat.top/fullchain.pem;
         ssl_certificate_key /etc/letsencrypt/live/zycat.top/privkey.pem;
        #ssl end
    #下面还是原来的配置如
    index index.html index.htm index.php;
        root  /home/wwwroot/default;
}
</code></pre>

然后再新建一个用来转发的http server,这里主要是为了全站https.

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">server
        {
        listen 80 default_server;
        #listen [::]:80 default_server ipv6only=on;
        server_name www.zycat.top;
            return      301 https://$server_name$request_uri;
        }
</code></pre>

<h2>证书有效期问题</h2>

官方提供的证书只有三个月的有效期，需要我们手动去重新申请证书。
这个其实也简单，重复上面的生成命令就好了。可以使用linux的定时任务去执行，执行之前最好备份一下原有的证书。不过这里的

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">./certbot-auto certonly --renew-by-default  --email duanmu3209211994@163.com -d zycat.top -d www.zycat.top
</code></pre>

就不是<em>standalone</em>而是<em>renew-by-default</em>了。
定时任务,每5天请求一次，当发现证书有效期小于30天的时候就会去请求新的证书，而且定时任务重启机器会重新即使。使用renew-hook会在请求成功证书后重新加载nginx.否则nginx的缓存还是失效的证书。

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">0 * */5 * * certbot renew --quiet --renew-hook "/etc/init.d/nginx reload"  

</code></pre>

有时间讲讲linux的定时任务。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date><![CDATA[2018-04-10 01:10:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-09 17:10:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%bd%91%e7%ab%99%e4%bd%bf%e7%94%a8lets-encrypt-%e5%ae%89%e8%a3%85ssl%e8%af%81%e4%b9%a6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e7%9b%b8%e5%85%b3"><![CDATA[网站相关]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nginx开启http2.0</title>
		<link>http://zycat.top/?p=120</link>
		<pubDate>Mon, 09 Apr 2018 19:02:59 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[配合ssl使用
listen 443 ssl http2 default_server;
端口用443，发现用了其他端口没走http2.0.
nginx重启，访问网站，然后访问chrome的
【chrome://net-internals/#http2】查看http sessions表中是否有配置了2.0的主机地址]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date><![CDATA[2018-04-10 03:02:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-09 19:02:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nginx%e5%bc%80%e5%90%afhttp2-0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%bd%91%e7%ab%99%e7%9b%b8%e5%85%b3"><![CDATA[网站相关]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>idea实现编写pom.xml时自动、提示</title>
		<link>http://zycat.top/?p=123</link>
		<pubDate>Wed, 11 Apr 2018 04:29:00 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=123</guid>
		<description></description>
		<content:encoded><![CDATA[<pre class="line-numbers prism-highlight" data-start="1"><code class="language-txt">由于idea不会自动更新maven的index,所以需要手动更新
在project settings-build,execution,deployment-&gt;buildtools-&gt;maven-&gt;repositories-选择仓库点击右边的update按钮就可以自动提示了。
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date><![CDATA[2018-04-11 12:29:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-11 04:29:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[idea%e5%ae%9e%e7%8e%b0%e7%bc%96%e5%86%99pom-xml%e6%97%b6%e8%87%aa%e5%8a%a8%e3%80%81%e6%8f%90%e7%a4%ba]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88"><![CDATA[小技巧闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows添加静态路由实现内网网同时连接</title>
		<link>http://zycat.top/?p=125</link>
		<pubDate>Thu, 12 Apr 2018 01:05:46 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[先举一个栗子

<blockquote>
  route add 66.0.0.0 mask 255.0.0.0 66.4.17.14
</blockquote>

这是将所有66开头的请求转发到66.4.17.14网关，255.0.0.0是子网掩码

route delete 66.* 可以删除路由

route print 打印路由

route delete 0.0.0.0

这是我的内外网配置

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">route delete 0.0.0.0
#外网
route add 0.0.0.0 mask 0.0.0.0 10.124.0.1
#内网
route add 66.0.0.0 mask 255.0.0.0 66.4.17.14
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date><![CDATA[2018-04-12 09:05:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-12 01:05:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[windows%e6%b7%bb%e5%8a%a0%e9%9d%99%e6%80%81%e8%b7%af%e7%94%b1%e5%ae%9e%e7%8e%b0%e5%86%85%e7%bd%91%e7%bd%91%e5%90%8c%e6%97%b6%e8%bf%9e%e6%8e%a5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e6%8a%80%e5%b7%a7%e9%97%b2%e8%b0%88"><![CDATA[小技巧闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>linux端口与网络查看</title>
		<link>http://zycat.top/?p=150</link>
		<pubDate>Tue, 24 Apr 2018 10:55:10 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>lsof -i:8080</h2>

列出使用8080端口的连接

<h2>netstat -anp |grep 8080</h2>

查看端口的状态]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date><![CDATA[2018-04-24 18:55:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-24 10:55:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux%e7%ab%af%e5%8f%a3%e4%b8%8e%e7%bd%91%e7%bb%9c%e6%9f%a5%e7%9c%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[linux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jvm参数</title>
		<link>http://zycat.top/?p=152</link>
		<pubDate>Tue, 24 Apr 2018 13:59:20 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">#堆内存最小值
-Xms20m
#堆内存最大值，在hotspot中设置最小最大相同时为了防止gc时内存动态扩展
-Xmx20m
-Xmn164m
#永久代的大小，在jdk8里面已经改为metaspace,存储类的元数据，方法区的一种实现
-XX:MaxPermSize=250m
#保留代码占用的内存容量，编译后的二进制字节文件最大值
-XX:ReservedCodeCacheSize=64m
-Xverify:none
#关闭类的自动gc,这里指的是方法区的类的定义的回收，不是堆上面的对象的回收。
-Xnoclassgc
#指定gc方式
-XX:+UseParNewGC
-XX:+UseConcMarkSweepGC
-XX:CMSInitiatingOccupancyFraction=85
#线程的堆栈大小，影响方法的数量，会出现StackOverflowError
-Xss128k
#开启断言
-ea
#打印gc日志
-XX:+PrintGCDetails

</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date><![CDATA[2018-04-24 21:59:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-24 13:59:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jvm%e5%8f%82%e6%95%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jvm"><![CDATA[jvm]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>oracle账户过期</title>
		<link>http://zycat.top/?p=158</link>
		<pubDate>Fri, 27 Apr 2018 11:28:13 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">#SCOTT账户为例
select username,profile from dba_users where username='SCOTT';
select * from dba_profiles where profile='DEFAULT' and resource_name='PASSWORD_LIFE_TIME';
alter profile default limit password_life_time unlimited;　
alter user SCOTT identified by root
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date><![CDATA[2018-04-27 19:28:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-04-27 11:28:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[oracle%e8%b4%a6%e6%88%b7%e8%bf%87%e6%9c%9f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[oracle]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>syntax error near unexpected token `$’do\r”</title>
		<link>http://zycat.top/?p=167</link>
		<pubDate>Mon, 28 May 2018 13:00:24 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=167</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>windows下打开脚本导致换行符问题</h1>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">cat -v fileNmae
</code></pre>

会发现每行后面跟了一个  <strong>^M</strong>符号
可以用下面的命令进行转换或者通过notePad++之类的工具进行转换

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">dos2unix fileName
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date><![CDATA[2018-05-28 21:00:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-05-28 13:00:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[syntax-error-near-unexpected-token-dor]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88"><![CDATA[问题解决方案]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>python pip 安装需要的外部库</title>
		<link>http://zycat.top/?p=170</link>
		<pubDate>Sun, 10 Jun 2018 11:46:34 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>安装 pip</h2>

<blockquote>
  安装pip ，我的是windows，最简单的方式是使用python安装包在安装的时候勾选 pip
</blockquote>

<h2>使用国内镜像进行安装</h2>

<ul>
<li>大部分时间官方的地址很快但毕竟是国内，还是镜像快点，以<strong>Scrapy</strong> 为例，使用豆瓣的镜像就很快，官方的经常超时。。</li>
</ul>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-shell">pip install Scrapy -i https://pypi.douban.com/simple

</code></pre>

<h2>常用的命令</h2>

<ul>
<li>查看已安装的模块列表

<blockquote>
  pip list
</blockquote></li>
<li>卸载模块

<blockquote>
  pip uninstall Scrapy
</blockquote></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date><![CDATA[2018-06-10 19:46:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-10 11:46:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[python-pip-%e5%ae%89%e8%a3%85%e9%9c%80%e8%a6%81%e7%9a%84%e5%a4%96%e9%83%a8%e5%ba%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Anaconda 镜像与环境</title>
		<link>http://zycat.top/?p=172</link>
		<pubDate>Sun, 10 Jun 2018 15:10:57 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>安装</h2>

<ul>
<li>现在 <strong>Anacondad</strong>的完整包</li>
</ul>

<blockquote>
  <a href="https://pan.baidu.com/s/1tKCryt8OIGUNk-12Ay_yRw">下载链接</a>   密码：ba0q
</blockquote>

<h2>设置环境变量，在安装的时候选择了自动添加但是没有成功。</h2>

<ul>
<li>进入系统环境变量设置，在系统变量-Path下面添加 </li>
</ul>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">D:\Users\duanm\Anaconda3；
D:\Users\duanm\Anaconda3\Scripts
</code></pre>

<h2>设置 镜像为 清华大学的，不然实在是太慢，各种报错</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --set show_channel_urls yes
</code></pre>

<ul>
<li>查看配置

<blockquote>
  conda config --show
</blockquote></li>
<li>使用 conda安装控件

<blockquote>
  conda install scrapy
</blockquote></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date><![CDATA[2018-06-10 23:10:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-10 15:10:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[anaconda-%e9%95%9c%e5%83%8f%e4%b8%8e%e7%8e%af%e5%a2%83]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="zxy"><![CDATA[编程语言]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>springboot集成swagger</title>
		<link>http://zycat.top/?p=178</link>
		<pubDate>Tue, 26 Jun 2018 11:45:09 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>pom.xml配置</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-xml">&lt;dependency&gt;
            &lt;groupId&gt;io.springfox&lt;/groupId&gt;
            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;
            &lt;version&gt;2.2.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.springfox&lt;/groupId&gt;
            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;
            &lt;version&gt;2.2.2&lt;/version&gt;
        &lt;/dependency&gt;

</code></pre>

<h2>配置swagger的主类</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">package com.zycat.springbootmybatisdemo;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

/**
 * @Description swagger config
 * @Author duanmulixiang
 * @create 2018-06-25 20:37
 * @Version 1.0
 **/
@Configuration
@EnableSwagger2
public class Swagger2 {

    @Bean
    public Docket createRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .select()
                .apis(RequestHandlerSelectors.basePackage("com.zycat.springbootmybatisdemo.controller"))
                .paths(PathSelectors.any())
                .build();
    }

    private ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                .title("Spring Boot中使用Swagger2构建RESTful APIs")
                .description("本项目用于测试swagger作为api文档")
                .termsOfServiceUrl("http://www.zycat.top/")
                .contact("端木礼响")
                .version("1.0")
                .build();
    }

}

</code></pre>

<h2>配置swagger的主类</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">package com.zycat.springbootmybatisdemo;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

/**
 * @Description swagger config
 * @Author duanmulixiang
 * @create 2018-06-25 20:37
 * @Version 1.0
 **/
@Configuration
@EnableSwagger2
public class Swagger2 {

    @Bean
    public Docket createRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .select()
                .apis(RequestHandlerSelectors.basePackage("com.zycat.springbootmybatisdemo.controller"))
                .paths(PathSelectors.any())
                .build();
    }

    private ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                .title("Spring Boot中使用Swagger2构建RESTful APIs")
                .description("本项目用于测试swagger作为api文档")
                .termsOfServiceUrl("http://www.zycat.top/")
                .contact("端木礼响")
                .version("1.0")
                .build();
    }

}

</code></pre>

<h3>在启动类中配置的扫描包里面配置swagger的api数据</h3>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-java">@ApiOperation(value = "登录接口",notes = "这是使用用户名和密码登录的接口")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "name",value = "名称",required = true,paramType ="query",dataType = "String"),
            @ApiImplicitParam(name = "pwd",value = "密码",required = true,paramType = "query",dataType ="String")
    })
    @RequestMapping(value = "/login",method = RequestMethod.GET)
    public UsrMmenus login(@RequestParam(value = "name",required = true) String name, @RequestParam(value = "pwd",required = true) String pwd){
        return userService.queryMenu("MActivityApply");
    }
</code></pre>

<h3>详细代码已分享到github,<a href="https://github.com/limuyan44/swagger-demo">点击访问</a></h3>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date><![CDATA[2018-06-26 19:45:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-26 11:45:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[springboot%e9%9b%86%e6%88%90swagger]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="springbooy"><![CDATA[springboot]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>springboot集成mybatis</title>
		<link>http://zycat.top/?p=183</link>
		<pubDate>Tue, 26 Jun 2018 12:03:55 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=183</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>配置pom.xml</h3>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null"><br />    &lt;properties&gt;
        &lt;mybatis-spring-boot&gt;1.2.0&lt;/mybatis-spring-boot&gt;
        &lt;mysql-connector&gt;5.1.39&lt;/mysql-connector&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;

        &lt;!-- Spring Boot Web 依赖 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;!-- Spring Boot Test 依赖 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;

        &lt;!-- Spring Boot Mybatis 依赖 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;
            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;
            &lt;version&gt;${mybatis-spring-boot}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- MySQL 连接驱动依赖 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;mysql&lt;/groupId&gt;
            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
            &lt;version&gt;${mysql-connector}&lt;/version&gt;
        &lt;/dependency&gt;

        &lt;!-- Junit --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;junit&lt;/groupId&gt;
            &lt;artifactId&gt;junit&lt;/artifactId&gt;
            &lt;version&gt;4.12&lt;/version&gt;
        &lt;/dependency&gt;

</code></pre>

<h3>在application.properties配置连接信息</h3>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">## 数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

## Mybatis 配置
mybatis.typeAliasesPackage=com.zycat.springbootmybatisdemo.domain
mybatis.mapperLocations=classpath:mapper/*.xml
</code></pre>

<h3>采用xml配置的方式使用sql</h3>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">@Autowired
    private UsrMmenusMapper usrMmenusMapper;
    @Override
    public UsrMmenus queryMenu(String menuid ) {
        return  usrMmenusMapper.selectByPrimaryKey(menuid);
    }
</code></pre>

<h3>使用mybatisgenerator自动生成sql</h3>

<h4>配置pom.xml</h4>

注：mysql的版本使用8.1的时候只会自动生成insert语句，环境低版本就好了。

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">&lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
            &lt;!--mybatis-generator插件--&gt;
            &lt;plugin&gt;
                &lt;!--Mybatis-generator插件,用于自动生成Mapper和POJO--&gt;
                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;
                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;
                &lt;version&gt;1.3.2&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;!--配置文件的位置--&gt;
                    &lt;configurationFile&gt;src/main/resources/conf/mybatis-generator-config.xml&lt;/configurationFile&gt;
                    &lt;verbose&gt;true&lt;/verbose&gt;
                    &lt;overwrite&gt;true&lt;/overwrite&gt;
                &lt;/configuration&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;id&gt;Generate MyBatis Artifacts&lt;/id&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;generate&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
                &lt;dependencies&gt;
                    &lt;dependency&gt;
                        &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;
                        &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;
                        &lt;version&gt;1.3.2&lt;/version&gt;
                    &lt;/dependency&gt;
                    &lt;dependency&gt;
                        &lt;groupId&gt;mysql&lt;/groupId&gt;
                        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
                        &lt;!--mysql 8.1的版本只能生成插入语句--&gt;
                        &lt;version&gt;${mysql-connector}&lt;/version&gt;
                    &lt;/dependency&gt;
                &lt;/dependencies&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
</code></pre>

<h3>配置generatorconfig.xml文件</h3>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" &gt;
&lt;generatorConfiguration&gt;

    &lt;!-- 本地数据库驱动程序jar包的全路径 --&gt;
    &lt;!--&lt;classPathEntry location=""/&gt;--&gt;

    &lt;context id="context" targetRuntime="MyBatis3"&gt;
        &lt;commentGenerator&gt;
            &lt;property name="suppressAllComments" value="false"/&gt;
            &lt;property name="suppressDate" value="true"/&gt;
        &lt;/commentGenerator&gt;

        &lt;!-- 数据库的相关配置 --&gt;
        &lt;jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/test?serverTimezone=GMT"
                        userId="root" password="root"/&gt;

        &lt;javaTypeResolver&gt;
            &lt;property name="forceBigDecimals" value="false"/&gt;
        &lt;/javaTypeResolver&gt;

        &lt;!-- 实体类生成的位置 --&gt;
        &lt;javaModelGenerator targetPackage="com.zycat.springbootmybatisdemo.domain" targetProject="src/main/java"&gt;
            &lt;property name="enableSubPackages" value="false"/&gt;
            &lt;property name="trimStrings" value="true"/&gt;
        &lt;/javaModelGenerator&gt;

        &lt;!-- *Mapper.xml 文件的位置 --&gt;
        &lt;sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources"&gt;
            &lt;property name="enableSubPackages" value="false"/&gt;
        &lt;/sqlMapGenerator&gt;

        &lt;!-- Mapper 接口文件的位置 --&gt;
        &lt;javaClientGenerator targetPackage="com.zycat.springbootmybatisdemo.mapper"
                             targetProject="src/main/java" type="XMLMAPPER"&gt;
            &lt;property name="enableSubPackages" value="false"/&gt;
        &lt;/javaClientGenerator&gt;

        &lt;!-- 相关表的配置 --&gt;
        &lt;table tableName="usr_mmenus" enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false" /&gt;
    &lt;/context&gt;
&lt;/generatorConfiguration&gt;
</code></pre>

最后，maven执行

<blockquote>
  mybatis-generator:generate -e
  或者使用idea直接执行mybatis-generator这个plugin也可以。
</blockquote>

具体代码见github地址，<a href="https://github.com/limuyan44/spring-boot-mybatis-demo">点击跳转</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date><![CDATA[2018-06-26 20:03:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-06-26 12:03:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[springboot%e9%9b%86%e6%88%90mybatis]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="springbooy"><![CDATA[springboot]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nginx url重写</title>
		<link>http://zycat.top/?p=187</link>
		<pubDate>Mon, 02 Jul 2018 23:28:34 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>使用rewrite模块进行url的改写</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">rewrite   &lt;regex&gt;   &lt;replacement&gt;    [flag];

关键字    正则      替代内容     flag标记



关键字：其中关键字 不能改变(此关键字必须有)
正则：perl兼容正则表达式语句进行规则匹配

替代内容：将正则匹配的内容替换成replacement

flag标记：rewrite支持的flag标记 使用$+数字配置正则组的内容，从1开始。 如 $1代表第一处正则匹配的内容

flag标记说明：

last     #本条规则匹配完成后，继续向下匹配新的location URI规则

break     #本条规则匹配完成即终止，不再匹配后面的任何规则

redirect   #返回302临时重定向，浏览器地址会显示跳转后的URL地址

permanent #返回301永久重定向，浏览器地址栏会显示跳转后的URL地址
</code></pre>

例子

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">location ~ (^/bmp/*)(.*)\.(jpg|gif|htm|html|png|js|css|exe|json|ioc|APK|zip)$ {
                    root D:/git/vx-merchant-pc/;
                    rewrite ^/bmp/(.*)$ /$1 break;
            expires 0s;
                }
</code></pre>

这是将对bmp的请求转发到我本地的工程里面去，会在root下面直接寻找
bmp后面的路径，其中 $1 代表正则匹配的内容， 1代表第一处。

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">if ( $host != 'www.zycat.top'  ) {

                rewrite ^/(.*) http://www.zycat.top/$1 permanent;

        }
 }
</code></pre>

把对这个服务器的所有请求都转发到http://www.zycat.top/ 下面]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date><![CDATA[2018-07-03 07:28:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-02 23:28:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nginx-url%e9%87%8d%e5%86%99]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88"><![CDATA[技术闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>常见的http状态码</title>
		<link>http://zycat.top/?p=191</link>
		<pubDate>Mon, 02 Jul 2018 23:43:40 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=191</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>常见的几类状态码代表什么意思</h1>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">2XX   这种代表服务器处理成功
3XX   通常代表需要重定向
4XX   代表服务器不能处理客户端的请求，通常是由于客户端请求有问题
5XX   代表服务器处理请求出了问题，通常代表服务器出了问题。
</code></pre>

<h1>常见的状态码</h1>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">通常2XX开头的是不需要处理的不做过多的解释
301 永久重定向  正常来说搜索引擎会抓取新的地址
302 临时重定向  正常来说搜索引擎会抓取 旧 的地址

404 请求的资源未找到
413 请求体过大，可能是nginx配置的太小。
403 服务器禁止这个请求
414  请求的url过长或者请求头过大。，只在浦发做微博转发的页面坚果这个错误。正常的url不会这么长，请求头过大可能是cookie. 通常是由于nginx限制的。该配置
500 一般是由于服务端代码问题
504 nginx超时

</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date><![CDATA[2018-07-03 07:43:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-02 23:43:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%b8%b8%e8%a7%81%e7%9a%84http%e7%8a%b6%e6%80%81%e7%a0%81]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88"><![CDATA[技术闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java8localdatetime转化</title>
		<link>http://zycat.top/?p=194</link>
		<pubDate>Wed, 11 Jul 2018 12:39:35 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>如题</h1>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">        LocalDateTime nowDateTime =LocalDateTime.of(2018,03,31,00,00);
        System.out.println("now" + nowDateTime);
        Instant instantNow = nowDateTime.atZone(ZoneId.systemDefault()).toInstant();
        Date date = Date.from(instantNow);
        System.out.println("date"+date);
        LocalDateTime l2 = LocalDateTime.of(LocalDate.now(), LocalTime.now());
        LocalDateTime l1=LocalDateTime.ofInstant(date.toInstant(), ZoneId.systemDefault());
        System.out.println("l1" + l1);
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date><![CDATA[2018-07-11 20:39:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-11 12:39:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java8localdatetime%e8%bd%ac%e5%8c%96]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javabase"><![CDATA[java基础]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nginx 更换配置文件后 invalid pid number</title>
		<link>http://zycat.top/?p=197</link>
		<pubDate>Mon, 16 Jul 2018 12:47:40 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=197</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>前言</h2>

今天做对象存储迁移的时候发现现有的nginx服务器与新的对象存储地址不通，于是便找了一台机器装了nginx做跳转。没想到跳板机ping的通但是端口没开（ping使用的是icmp协议处于网络层，没有端口）,后来发现跳板机上面以前装了个tomcat,开了8080端口，于是便通过8080端口跳到这台机子上然后再转发的新的对象存储地址。

<blockquote>
  rpm -ivh nginx.rpm
</blockquote>

之后，替换nginx.conf （因为已经有了一套完善的nginx.conf的配置，所以就没有使用原来的。），

<blockquote>
  nginx -t
</blockquote>

未报错

<blockquote>
  nginx -s reload
</blockquote>

报错。最初是想

<blockquote>
  echo pid号 > xxx.pid 文件
</blockquote>

很不幸，<strong>ps -ef|grep nginx</strong> 一片空白。于是，使用

<blockquote>
  nginx -c nginx.conf
</blockquote>

重新加载配置文件，搞定，ok。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date><![CDATA[2018-07-16 20:47:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-16 12:47:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nginx-%e6%9b%b4%e6%8d%a2%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e5%90%8e-invalid-pid-number]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88"><![CDATA[问题解决方案]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>这里记载的待研究的内容</title>
		<link>http://zycat.top/?p=201</link>
		<pubDate>Mon, 16 Jul 2018 12:54:14 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=201</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>这个栏目主要是记载一些看到的感兴趣的内容，记录下来慢慢研究</h1>

<ul>
<li>Tengine
> Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。</li>
</ul>

注：兼容nginx配置，并且提供了许多优秀的特性，社区活跃，据我所知斗鱼目前也在使用这个。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date><![CDATA[2018-07-16 20:54:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-16 12:54:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%bf%99%e9%87%8c%e8%ae%b0%e8%bd%bd%e7%9a%84%e5%be%85%e7%a0%94%e7%a9%b6%e7%9a%84%e5%86%85%e5%ae%b9]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%be%85%e7%a0%94%e7%a9%b6%e7%9a%84%e5%86%85%e5%ae%b9"><![CDATA[待研究的内容]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一次503问题的排查</title>
		<link>http://zycat.top/?p=206</link>
		<pubDate>Wed, 18 Jul 2018 11:59:18 +0000</pubDate>
		<dc:creator><![CDATA[limuyan44]]></dc:creator>
		<guid isPermaLink="false">http://zycat.top/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>原由</h2>

下班的时候生产大面积出现网关系统错，排查之后是请求微信报错，网络情况是 服务-apache代理-f5.

<h2>解决</h2>

发现的情况是访问外网完全不通，找网络方面协助排查，外网网络没有变动，网络状况也是正常的。猜测dns解析出现问题，使用host配置域名，服务正常。后来，排查到服务器dns配置被人在第一条加了一个内网的 用于解析 ntp服务器nameserver。

<h2>命令</h2>

<pre class="line-numbers prism-highlight" data-start="1"><code class="language-null">#查看dns，其中nameserver会按文件内配置顺序来解析，修改此文件不需要重启，有的nameserver超过某个数量之后的server就不会生效。
cat /etc/resolv.conf

#修改host文件
cat /etc/host
# ip 域名
# 127.0.0.1 wwww.baidu.com

</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date><![CDATA[2018-07-18 19:59:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-18 11:59:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b8%80%e6%ac%a1503%e9%97%ae%e9%a2%98%e7%9a%84%e6%8e%92%e6%9f%a5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e9%97%b2%e8%b0%88"><![CDATA[技术闲谈]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
